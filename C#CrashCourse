//Rextester.Program.Main is the entry point for your code. Don't change it.
//Compiler version 4.0.30319.17929 for Microsoft (R) .NET Framework 4.5

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.RegularExpressions;

namespace Rextester
{
    public class Program
    {
        public static void Main(string[] args)
        {
            //variables hold data, int hold integer data, float and double hold numbers with deciaml points
            //double uses twice as much memory to store float, it can hold larger value ranges
            //string hold text, bool can be set true or false
            //lower case f next to 3.14 signals it being a float
            //cannot use f, there isn't room to store double in float
            //remove the f
            //change all to var, unity can determine the type based on the value typed after var
            //replace var with bool on likesPizza, it's an inferred type
            //arrays are constructs that hold multiple values
            //creates a list, all accessible from variable writers
            //created an array that holds 5 items from the list
            //new creates an instance of the array of strings
            //writers[0] replaces the first string in the array with another string
            //
            
            //Your code goes here
            Console.WriteLine("Hello, world!");
            
            var meaningOfLife = 42;
            var smallPi = 3.14;
            var bigPi = 3.14159265359;
            var vaporWare = "Half Life 3";
            const bool likesPizza = true;
            
            string[] writers = {"Anthony","Brian","Eric","Sean"};
            string[] editors = new string[5];
            Console.WriteLine(writers[2]);
            writers[0] = "Ray";
            
            //if (likesPizza == false)
            //{
                //Console.WriteLine("You Monster!");
                //bool isMonster = (likesPizza == true)?false:true;
           // }
            
            //for(int i=0; i <writers.Length; i++)
            //{
                //string writer = writers[i];
                //Console.WriteLine(writer);
            //}
            
            foreach (string writer in writers)
            {
                Console.WriteLine(writer);
            }
                
        }
    }
}
